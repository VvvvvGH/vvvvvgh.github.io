import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as i,d as s,a as e,e as a,r as l,o as p}from"./app-CJlMl9Ja.js";const g={};function d(h,t){const n=l("Mermaid");return p(),o("div",null,[t[0]||(t[0]=i('<h1 id="ag-ui-agent-user-interaction-protocol-架构解析" tabindex="-1"><a class="header-anchor" href="#ag-ui-agent-user-interaction-protocol-架构解析"><span>AG-UI (Agent User Interaction Protocol) 架构解析</span></a></h1><p>AG-UI (Agent User Interaction Protocol) 是一套开放协议，旨在<strong>标准化前端应用程序与 AI Agent (人工智能代理) 之间的连接与交互方式</strong>。AG-UI 解决了 AI 应用开发中的三大核心挑战：实时交互性、状态流式传输、人机协作。</p><h2 id="_1-核心概念" tabindex="-1"><a class="header-anchor" href="#_1-核心概念"><span>1. 核心概念</span></a></h2><p>AG-UI (Agent User Interaction Protocol) 是一套开放协议，旨在<strong>标准化前端应用程序与 AI Agent (人工智能代理) 之间的连接与交互方式</strong>。AG-UI 解决了 AI 应用开发中的三大核心挑战：</p><ul><li><p><strong>实时交互性</strong>：支持字符级的流式响应，提供即时反馈</p></li><li><p><strong>状态流式传输</strong>：实时、增量地同步 Agent 状态到前端</p></li><li><p><strong>人机协作</strong>：内置工具调用和人工确认机制，实现 Human-in-the-Loop 工作流</p></li></ul><h3 id="_1-1-设计理念" tabindex="-1"><a class="header-anchor" href="#_1-1-设计理念"><span>1.1 设计理念</span></a></h3><ul><li><p><strong>标准化与解耦</strong>：为前端和 AI Agent 提供统一的通信标准，解耦具体实现</p></li><li><p><strong>事件驱动</strong>：所有通信基于异步事件流，支持实时、非阻塞交互</p></li><li><p><strong>供应商中立</strong>：消息和事件格式设计为通用型，易于切换不同 AI 服务</p></li><li><p><strong>轻量级</strong>：最小化对底层技术栈和传输方式的限制，降低集成门槛</p></li><li><p><strong>双向互动</strong>：Agent 不仅能响应用户，也能接受用户的输入，实现紧密协作</p></li><li><p><strong>前端定义工具</strong>：工具的能力由前端定义并传递给 Agent，增强前端控制力和安全性</p></li></ul><h2 id="_2-系统架构" tabindex="-1"><a class="header-anchor" href="#_2-系统架构"><span>2. 系统架构</span></a></h2><p>AG-UI 采用客户端-服务器架构，通过标准化事件流实现前端与 Agent 的通信。</p>',9)),s(n,{id:"mermaid-71",code:"eJxLy8kvT85ILCpR8AniKi5NSi9KLMhQUHra2ft89XoFDbei/LyS1LwUTSUux4KCaKWnu6Y8n7JCQQPIyclMTizJzM/TVIrlcs7JTM0riVZydNcN9VR4um7Rs47tYP2peul6OgoeJSUFjulAFSC1QNO4kG2a0AdW6ZSYnA21yBBokKcCWIOCo4LG89lbnvUtfbF/HpAEGRAAdMa6zqetK57sXvx8QpuCRnBqcmlRqkJAUX5FJUiBoxGSAU4KGi8bZr3Y3w5RDZY3RpJ3xpQHuxDoQwUbXV07BYjfoF4EC9XA/Nnb/2LdOqUaBUdDvNIBXAE49BnhlDHm4krOSSwuVghQyM3MKwkuqcxJtYYIuaSmIcQU0jJzcqyUXQ3czF0tdYpLivKzU62UzcycnMwcoVzd8syUkgwro4IKneT8nPwiK2UDMLAGRgPYCJBXiyqsTHUUiiqtTK2holAfYUo4GmIRDMCm0AiboDGKIADKfeUh"}),t[1]||(t[1]=i('<h3 id="_2-1-核心组件" tabindex="-1"><a class="header-anchor" href="#_2-1-核心组件"><span>2.1 核心组件</span></a></h3><ul><li><p><strong>前端应用</strong>：用户直接交互的界面，如聊天应用或集成 AI 功能的应用</p></li><li><p><strong>AG-UI 客户端</strong>：处理与 Agent 通信的客户端库（如 <code>HttpAgent</code>）</p></li><li><p><strong>AI Agent</strong>：处理请求并生成响应的 AI 服务</p></li><li><p><strong>安全代理</strong>：可选的后端服务，提供请求路由、认证、多 Agent 管理等功能</p></li></ul><h3 id="_2-2-工作流程" tabindex="-1"><a class="header-anchor" href="#_2-2-工作流程"><span>2.2 工作流程</span></a></h3><ol><li><p>前端应用通过 AG-UI 客户端发起请求，包含对话历史、可用工具、上下文信息等</p></li><li><p>AI Agent 处理请求，通过一系列<strong>事件 (Events)</strong> 将响应流式传输回客户端</p></li><li><p>AG-UI 客户端接收事件，更新前端 UI 或执行其他操作（如调用工具）</p></li><li><p>如需工具调用，前端执行工具并将结果作为<strong>消息 (Message)</strong> 发回给 Agent</p></li><li><p>Agent 继续处理，生成更多事件</p></li><li><p>整个交互过程是双向的、实时的</p></li></ol><h2 id="_3-核心技术组件" tabindex="-1"><a class="header-anchor" href="#_3-核心技术组件"><span>3. 核心技术组件</span></a></h2><h3 id="_3-1-agents" tabindex="-1"><a class="header-anchor" href="#_3-1-agents"><span>3.1 Agents</span></a></h3><p>Agent 是 AG-UI 协议的核心，处理请求并生成响应。</p><ul><li><p><strong><code>AbstractAgent</code></strong>：所有 AG-UI Agent 的抽象基类，提供状态管理、消息历史跟踪和事件流处理的框架</p></li><li><p><strong><code>HttpAgent</code></strong>：通过 HTTP 与远程 AI 服务通信的具体实现，支持多种传输方式：</p></li><li><p><strong>HTTP SSE (Server-Sent Events)</strong>：基于文本的流式传输</p></li><li><p><strong>HTTP Binary Protocol</strong>：高性能的二进制传输格式</p></li></ul><p><strong>Agent 运行输入</strong>：</p>',9)),s(n,{id:"mermaid-166",code:"eJw1zLsKwjAYhuHdq8iolyG4dBPX4hBMPIBNSvoXHXXwfARFJ4UOYreiQz0hvZkm7WVYW12/5+M1WowY2MwhJDiHfL5is2KDMtCYaUOhkOwIQVNQTDSiS+8Re4foGUTuTCtVUxQ2+8p7IyeLOFjHzvwvFmCgelpD0dRXvX62G9SycINav5zyx6rvyeVQrq7ZAThvJ7ryoq0rbyc5uMnxPnbcTGucAe2CHt6n4X2mdqMwcJJAhnUuOlgQSsqCm0lj4IevnbwcVe9czX0AG6hu8A=="}),t[2]||(t[2]=e("h3",{id:"_3-2-events-事件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-2-events-事件"},[e("span",null,"3.2 Events (事件)")])],-1)),t[3]||(t[3]=e("p",null,"事件是 AG-UI 中前端和 Agent 之间通信的基本单元。在 AG-UI 中，所有通信都基于事件流，它们以流式方式从 Agent 传输到前端，或从前端传回 Agent。",-1)),t[4]||(t[4]=e("h4",{id:"_3-2-1-事件流转基本模型",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-2-1-事件流转基本模型"},[e("span",null,"3.2.1 事件流转基本模型")])],-1)),t[5]||(t[5]=e("p",null,"AG-UI 采用事件驱动的架构模式，所有交互通过事件流进行传递：",-1)),s(n,{id:"mermaid-179",code:"eJxLy8kvT85ILCpR8AniCi1OLYp+PmXFs47tsQo2urp2Cm5F+XklqXkp0U87e5+vXv901xSgdCxXcWlSelFiQYbCk13dT3Zve7a1kcvVEKhz/tOJe59OXPFsznyIRKyCrh7QlBqggqd7+p/sWfBi3+QaBeeczNS8Ei5Xo+hn09qfzVnzbFvHs8b1xOgwjn66fenT1u0vNjQD3UGMDpPo513bnjU0Pl+38PmENmJ0mEY/79z5bF0XEWqBAcMFCyFIeEEkoh3ddUM9FZ6uWwQMSWCwxXJBxCFqHNPBSjwhDGBgllTmpCq4GiqkZebkWCmnWaaYpprqFJcU5WenWikbGxtD2brlmSklGVaGBRUwLUZQLampicmWlkRpMYZpMTAzNjcnSosJVEuyhbGxCXG2mEK1mCZZJiYa4NcCABsgFWI="}),t[6]||(t[6]=e("h4",{id:"_3-2-2-事件类型与流转过程",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-2-2-事件类型与流转过程"},[e("span",null,"3.2.2 事件类型与流转过程")])],-1)),t[7]||(t[7]=e("p",null,"AG-UI 定义了五大类事件，每类事件在通信过程中承担不同角色：",-1)),s(n,{id:"mermaid-186",code:"eJxLzkksLnbJTEwvSszlAnMUnBKLU13LUvNKFKq5tMGMkMqCVIUSIMGlXZKZm1pckphbwKVdlFgOluWq5UJosanR1VV4PmX+04l7n05c8WzO/Ce7up/s3oau4tm09mdz1jzb1vGscT12FU+3L33auv3FhubnU1ZgV/G8a9uzhsbn6xY+n9CGQ0XnzmfruqBymI5SsFLQDgr1iw8OcQwKcXXBo8LN088z2AOvEtegIP8gHPLBIa4BBGwBK4Fbgxk8IDUhrhEh8b6uwcGO7q4Q44hR6OzvF+LqR5RSVz8XLsxwByvz9/eJd3b08YHaS0iVY5B7MEFFIOswIxESGo4hQC/6OQYEe/iH4FXk4uoT4ohDBdRfwUgmIaUIcMw5hmOIOYcGh/j7cgEAFyp+Tw=="}),t[8]||(t[8]=e("h4",{id:"_3-2-3-三种主要事件流模式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-2-3-三种主要事件流模式"},[e("span",null,"3.2.3 三种主要事件流模式")])],-1)),t[9]||(t[9]=e("p",null,"AG-UI 使用三种核心事件流模式来处理不同类型的交互：",-1)),t[10]||(t[10]=e("ol",null,[e("li",null,[e("strong",null,"生命周期模式"),a(" - 跟踪 Agent 运行状态：")])],-1)),s(n,{id:"mermaid-200",code:"eJwrTi0sTc1LTnXJTEwvSszlKkgsKslMzixIzCtRCC1OLVJILFZ4PmXFs47tKFJuRfl5Jal5KSDpp529z1evR5F2TE8FkkA5MIMLZJCunR1Mk5XC0/6JLxsaX6zf/mxjExdMGKgCrNxK4Vn/hCe7lrzYN/lp61IusBiK7qBQv/jgEMegEFcXrvyCEoVnnctfLOx5tnbpy1VLsCgPDnENgKv3yy9JVcgvA3oMrFAHoQzMhxj1vHPn03Wznuze/bRrIS4D3Tz9PIM9gCYChbgSc4Cu6JjwtGv+03U9QAYORyP05BSnKjxt3/VyykwcSl2DgvyDwGYjBQ8oHIGhM3vLs2kbnk/teTl3ERcAqYa5jA=="}),t[11]||(t[11]=e("ol",{start:"2"},[e("li",null,[e("strong",null,"流式内容模式"),a(" - 用于文本和工具调用：")])],-1)),s(n,{id:"mermaid-208",code:"eJwrTi0sTc1LTnXJTEwvSszlKkgsKslMzixIzCtRcCvKzytJzUtRSCxWeNrZ+3z1ehRpx/RUIAmUAzO4/PJLUhXyy1KLIHwdmG4rhWfT2p/NWfNsW8ezxvXPtjY+3dP/ZM+CF/smc4EV6trZIZSGuEaExPu6Bgc7urvGB4c4BoUoaGSm2OYWpxsaGWty5eTnFyg8bWt9um7n0462p3OnEzLC2d8vxNUP2RAdqP7nne3P1m3V5IJpRDHj6bp5z6ZvezZ7y7NpG0I9uYBihCxy9XNBcSnu0Hi6fenT1u0vNjQ/n7KCUGj4+/vEOzv6+CAFRUl+fo6JqRksLPqbnk3dgDss4AY4BrkHI+sHBgNYKywYcHgRrh/mP7j1SOEG1gfz2LPO5S8W9jzfPfnZvDkKGiFA5b6pxcWJ6amaXAAvQfvk"}),t[12]||(t[12]=e("ol",{start:"3"},[e("li",null,[e("strong",null,"状态同步模式"),a(" - 维护共享状态：")])],-1)),s(n,{id:"mermaid-216",code:"eJwrTi0sTc1LTnXJTEwvSszlKkgsKslMzixIzCtRcCvKzytJzUtRSCxWeNrZ+3z1ehRpx/RUIAmUAzO4wKSunR1Ml5VCcIhjiGt8sJ9jQLCHf4iCxtN1Pc+mbnnete1ZQ6MmF0wdipZns/c/6130bM6ap3M2QBRy5eTnFyi82D/hxcKeF/vbn6/ofrJjLU7LXFx9QhwVNLyC/f0UAhJLkjOeLpr3sr3/2ewtz6ZtwGHn011Tnk9ZgayQCyjOlV9QovCyvffphJ5na5cS4TugvuezWojwI9DQ53vXofgRZt+zbR3PGtc/7Wt72r8Jp8W+rsHBju6uwXC7cQUlyCtP1+98sX4uxESwNQDrUeEN"}),t[13]||(t[13]=e("h4",{id:"_3-2-4-完整交互图示",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-2-4-完整交互图示"},[e("span",null,"3.2.4 完整交互图示")])],-1)),t[14]||(t[14]=e("p",null,"下图展示了一个典型的 AG-UI 交互过程，包含各类事件的流转：",-1)),s(n,{id:"mermaid-223",code:"eJydU81KAlEU3s9TDK1qkQ/gIhhyKsHGcK7QTgYbQijHRttnv2MlGqkFmlKNKIQ/C9MwqJfxntG36F6vksKg1mYY7vm+7/x9J6oeHavhoOoKKfu6csgpwZim8/6oqvNKlLcyVTA6XETRY6FgKKKEY/yGroVjaniPhnEiab01cDdDcFMgYV8lX4IQ3Ox/Koo07WBIN3ODsyrulPFFh6MpV9fWxvJOHqfuBidxKJX7jRdu/EwQQz0nD6l0r2uyAqFtQLzBDSNTGj6/FJCR4EOiyyZKIkgMyJKwI295Eb+MjSdcubGu23ASX7HBI3EXBbZFWRY2CY3KzgOteyUkSkR6CYw7qL3iQhWb51b60uFwLM1NIUr2VYs746ZozZdQTNtJse5cogcJ/DLkW5BrstacjNP7qNnTiPyGW3LLW7P1kdfrCawLHg8rhuQYrgqyTUjWZxME36ZMpFOnBDwbSUcwsXvqHLL6RKX/fMt802+eUfPRwOqURv87g/NF6/MeigUb+zB3MY0R6C8jtDIlMNIkATaTC1rlQNMi5KB+eQubh8GtxBXU31cme5k4lnoRHtqsRL+bI2//Mxc9mPHyJzPR6ySDf/yyzC6u30K2NerhB00NwGc="}),t[15]||(t[15]=e("h4",{id:"_3-2-5-事件时序与状态变化",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-2-5-事件时序与状态变化"},[e("span",null,"3.2.5 事件时序与状态变化")])],-1)),t[16]||(t[16]=e("p",null,"在 AG-UI 交互过程中，事件流和状态变化同步进行，展示了实时交互性：",-1)),s(n,{id:"mermaid-230",code:"eJxtkstK80AYhvdzFd/mh/4QwdYDmF2wsRY0SieuJbZRCrYFMwuXVfGseK6C1iIoFTx1IVXr4Wo6M70Mv0lqPMJswvPOPO98mSknzxhhWTbtgpHoGEtCs7HefK6LwzpvbJGMw9yBwkzOYeARZzbrtT/+UVndJZ6bZtlCHuR+he+88p1LcVIhqTFrnNpGyjbjoOey067HCnlXg1xUg05chNrm6N+JmAYqFCQGklaSDv6MdGmAq9O3/J3oxkN8z0c7UVoWJ9eiviLm7gh/KfLqOkR8/3/QnaBV1CN8aZHfPkGkf8SyTctn2MeZZO4MqFSvR+TznihXIGJacYWxSBur4l4o5A8XfPGhVVuQ+5e/hBN4FG5Uwq15cVCDiJFKUAVCm4og/26bCG0qqLb7FrFabZ1tIMZrtzEGY59l5FpdFOfk7ZncXsLBGrY5Ti1jlA6O2KCnw9sHJG4O2QZEEaAj0HwFMQR4eo8Phk1KjYRJw+P0NHbo+z6J1U15dSeO70WpRvhKGSfBN0r4yPRMaBZHb/K8IYrlVnGh+XiDKHgGeIcAfR0n0uAFdIX0+JSfb7Z/np7BCr0adHvkHe6eFXo="}),t[17]||(t[17]=i('<h3 id="_3-3-messages-消息" tabindex="-1"><a class="header-anchor" href="#_3-3-messages-消息"><span>3.3 Messages (消息)</span></a></h3><p>消息构成对话历史，代表用户和 AI Agent 之间的交流内容。</p><p><strong>消息类型</strong>：</p><ul><li><p><strong><code>UserMessage</code></strong>：用户发送给 Agent 的消息</p></li><li><p><strong><code>AssistantMessage</code></strong>：Agent 发送给用户的消息，可能包含文本内容和工具调用请求</p></li><li><p><strong><code>SystemMessage</code></strong>：提供给 Agent 的指令或上下文</p></li><li><p><strong><code>ToolMessage</code></strong>：工具执行后的结果</p></li></ul><p><strong>工具调用流程</strong>：</p>',5)),s(n,{id:"mermaid-265",code:"eJwrTi0sTc1LTnXJTEwvSszlSkwuyS9SCC1OLeIqSCwqyUzOLEjMK1FwK8rPK0nNS0ERdExPzStBEQnJz8/h4gLp1rWzg+mxUnixb/LT1qXPtnU8a1zPBRMGqgAbYAW2zTe1uDgxPZULLISi2bG4OLO4BGg6VImCxtMJq8E2OSfm5GgimwcStFJ41rn8xcKep9uXPm3dzgUS0kUxDyLxfPfkZ/PmYHEMSAOyTRCFmkQ57Nmchue7O55O7n26awqKw0A+BDpsxr7nS3ZBpLkAU4idwg=="}),t[18]||(t[18]=i('<h3 id="_3-4-state-management-状态管理" tabindex="-1"><a class="header-anchor" href="#_3-4-state-management-状态管理"><span>3.4 State Management (状态管理)</span></a></h3><p>AG-UI 支持 Agent 和前端之间的状态实时同步。</p><p><strong>状态同步方法</strong>：</p><ul><li><p><strong><code>STATE_SNAPSHOT</code> 事件</strong>：提供 Agent 当前状态的完整快照</p></li><li><p><strong><code>STATE_DELTA</code> 事件</strong>：提供对 Agent 状态的增量更新，使用 <strong>JSON Patch (RFC 6902)</strong> 格式</p></li></ul><p><strong>状态同步流程</strong>：</p>',5)),s(n,{id:"mermaid-290",code:"eJxLL0osyFDwCeIqLk2CsJ93bXvW0Ph0Qs+ztUu5UjKLUpNLMvPzQEqC8xILijPyS6KVgksSS1JhXAWNp+t6nk3dAtGoqRSroKtrp+Cck5maVwJWGK30dN2iZx3bn69eD1GjFMvlkppTkgg1CMxW0PAK9vdTCEgsSc5QeLpo3sv2fixGcaXmpXA5pgO5YBmYE5CEwIZxIWkBi4Z6RiuFeio827Hp2fzJQOu5iksqc1Lh+hXSMnNyrJRzMtMzSipTc3Lyy3WKS4rys1OtlI2NjaFs3fLMlJIMK6OCCqhuiLuRtCbllKbi1wgADkqNpw=="}),t[19]||(t[19]=i(`<h3 id="_3-5-tools-工具" tabindex="-1"><a class="header-anchor" href="#_3-5-tools-工具"><span>3.5 Tools (工具)</span></a></h3><p>工具使 Agent 能够与外部系统交互或请求人工输入。</p><p><strong>工具定义</strong>：工具由前端定义，并作为 <code>RunAgentInput</code> 的一部分传递给 Agent。</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-typescript"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Tool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 工具名称</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">description</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 工具描述</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">parameters</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> JSONSchema</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 参数结构（JSON Schema）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>工具调用生命周期</strong>：通过 <code>ToolCallStart</code>, <code>ToolCallArgs</code>, <code>ToolCallEnd</code> 事件流式传递工具调用请求。</p><p><strong>前端定义工具的优势</strong>：</p><ul><li><p>前端控制 Agent 可用的能力</p></li><li><p>根据用户权限或上下文动态调整工具</p></li><li><p>关注点分离（Agent 负责推理，前端负责实现）</p></li><li><p>增强安全性（敏感操作由应用程序控制）</p></li></ul><h2 id="_4-与其他协议的关系" tabindex="-1"><a class="header-anchor" href="#_4-与其他协议的关系"><span>4. 与其他协议的关系</span></a></h2><p>AG-UI 专注于<strong>Agent 与用户之间的交互层</strong>，与其他协议相互补充：</p>`,9)),s(n,{id:"mermaid-335",code:"eJxLL0osyFAIceEqLk2CsJWe9va/WLfu+ZT5zxoalbgc3eNDPaOVHN11Qz0VNBzTU/NKFB61TVEILU4t0lSK5XI0cgTKGjkiy4FZIElf54BoJSCBLBmSn5+j75ufkpoDUpGal8LFBZYEmuIJ0akUq6CrqwCxUVfXDmxVtNLzKSuedWx/PrXn5dxFIHvBBoLUAe0GqfIvyUgtgpr0tHXbk93TFBAGIpSDXANSDnJGMVDlkmkvm1c83b70aet2/Wdzep92LQSq5iouqcxJBToB6HeFtMycHCvlnMz0jJKknNJUmBzQWiSZ9KLU1DyoFMgKJKnk/KLEHC4AoRyCzw=="}),t[20]||(t[20]=i('<ul><li><p><strong>AG-UI</strong>：处理 Agent 与用户之间的交互</p></li><li><p><strong>A2A (Agent-to-Agent Protocol)</strong>：处理 Agent 之间的通信和协作</p></li><li><p><strong>MCP (Model Context Protocol)</strong>：标准化工具调用和跨模型上下文处理</p></li></ul><p>一个 Agent 可能同时通过不同协议与多个实体交互，形成完整的 AI 生态系统。</p><h2 id="_5-技术实现考量" tabindex="-1"><a class="header-anchor" href="#_5-技术实现考量"><span>5. 技术实现考量</span></a></h2><h3 id="_5-1-传输层" tabindex="-1"><a class="header-anchor" href="#_5-1-传输层"><span>5.1 传输层</span></a></h3><p>AG-UI 协议与具体传输机制解耦，可以在多种传输层之上实现：</p><ul><li><p>Server-Sent Events (SSE)</p></li><li><p>WebSockets</p></li><li><p>HTTP/2</p></li><li><p>其他自定义传输机制</p></li></ul><h3 id="_5-2-集成场景" tabindex="-1"><a class="header-anchor" href="#_5-2-集成场景"><span>5.2 集成场景</span></a></h3><p>AG-UI 可以集成到多种前端框架和 Agent 框架：</p><ul><li><p><strong>前端框架</strong>：React, Vue, Angular 等</p></li><li><p><strong>Agent 框架</strong>：LangGraph, CrewAI, Mastra, AG2 等</p></li></ul><h3 id="_5-3-人机协作最佳实践" tabindex="-1"><a class="header-anchor" href="#_5-3-人机协作最佳实践"><span>5.3 人机协作最佳实践</span></a></h3><p>使用 AG-UI 构建人机协作系统时的最佳实践：</p><ul><li><p>通过工具调用实现用户确认流程</p></li><li><p>使用状态同步展示 Agent 的思考过程</p></li><li><p>设计清晰的交互界面，显示 Agent 状态和当前活动</p></li><li><p>构建渐进式交互模式，允许用户在任何时刻介入</p></li></ul>',12))])}const m=r(g,[["render",d]]),u=JSON.parse('{"path":"/posts/2025-05-29.html","title":"AG-UI 协议解析","lang":"zh-CN","frontmatter":{"title":"AG-UI 协议解析","date":"2025-05-29T00:00:00.000Z","category":["技术架构","协议设计"],"tag":["AG-UI","协议解析","AI Agent","前端架构","事件驱动","实时交互","流式传输","人机协作"],"excerpt":"AG-UI (Agent User Interaction Protocol) 是一套开放协议，旨在标准化前端应用程序与 AI Agent 之间的连接与交互方式。本文深入解析其核心概念、系统架构和技术实现。","description":"AG-UI (Agent User Interaction Protocol) 架构解析 AG-UI (Agent User Interaction Protocol) 是一套开放协议，旨在标准化前端应用程序与 AI Agent (人工智能代理) 之间的连接与交互方式。AG-UI 解决了 AI 应用开发中的三大核心挑战：实时交互性、状态流式传输、人机协...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AG-UI 协议解析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-29T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-29T14:36:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guohao\\",\\"url\\":\\"https://space.vistazx1.top\\"}]}"],["meta",{"property":"og:url","content":"https://space.vistazx1.top/posts/2025-05-29.html"}],["meta",{"property":"og:site_name","content":"Vista"}],["meta",{"property":"og:title","content":"AG-UI 协议解析"}],["meta",{"property":"og:description","content":"AG-UI (Agent User Interaction Protocol) 架构解析 AG-UI (Agent User Interaction Protocol) 是一套开放协议，旨在标准化前端应用程序与 AI Agent (人工智能代理) 之间的连接与交互方式。AG-UI 解决了 AI 应用开发中的三大核心挑战：实时交互性、状态流式传输、人机协..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-29T14:36:19.000Z"}],["meta",{"property":"article:tag","content":"人机协作"}],["meta",{"property":"article:tag","content":"流式传输"}],["meta",{"property":"article:tag","content":"实时交互"}],["meta",{"property":"article:tag","content":"事件驱动"}],["meta",{"property":"article:tag","content":"前端架构"}],["meta",{"property":"article:tag","content":"AI Agent"}],["meta",{"property":"article:tag","content":"协议解析"}],["meta",{"property":"article:tag","content":"AG-UI"}],["meta",{"property":"article:published_time","content":"2025-05-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-29T14:36:19.000Z"}]]},"git":{"createdTime":1748519535000,"updatedTime":1748529379000,"contributors":[{"name":"GH","username":"GH","email":"cheng123xp@gmail.com","commits":1,"url":"https://github.com/GH"},{"name":"VvvvvGH","username":"VvvvvGH","email":"cheng123xp@gmail.com","commits":1,"url":"https://github.com/VvvvvGH"}]},"readingTime":{"minutes":10.02,"words":3007},"filePathRelative":"posts/2025-05-29.md","autoDesc":true}');export{m as comp,u as data};
